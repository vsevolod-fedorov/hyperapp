# Automatically generated file. Do not edit.

import:
- base.mark:mark.module
- legacy_type.builtin:attribute
- legacy_type.builtin:python_module
- legacy_type.builtin:record_mt
- legacy_type.builtin:string
- legacy_type.cfg_item:typed_fn_cfg_item
- legacy_type.command:cfg_item
- legacy_type.command:open_args_picker_command_d
- legacy_type.command:ui_args_picker_command_enumerator
- legacy_type.label:state
- legacy_type.label:view
- legacy_type.system_fn:ctx_fn
- legacy_type.view_factory:template
- ui.view.view:view.module
definitions:
  LabelView:
    type: legacy_type.builtin:attribute
    value:
      object: label.module
      attr_name: LabelView
  LabelView.from_piece:
    type: legacy_type.builtin:attribute
    value:
      object: LabelView
      attr_name: from_piece
  LabelView_from_piece.system-fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: LabelView.from_piece
      ctx_params:
      - piece
      - ctx
      service_params: []
  label-view-set_label_text.command-cfg-item:
    type: legacy_type.command:cfg_item
    value:
      t: legacy_type.label:view
      command: set_label_text.ui-command-enumerator
  label-view.view-template:
    type: legacy_type.cfg_item:typed_fn_cfg_item
    value:
      t: legacy_type.label:view
      system_fn: LabelView_from_piece.system-fn
  label.module:
    type: legacy_type.builtin:python_module
    value:
      module_name: label
      file_name: label.dyn.py
      import_list:
        code.mark: base.mark:mark.module
        code.view: ui.view.view:view.module
        htypes.label.state: legacy_type.label:state
        htypes.label.view: legacy_type.label:view
  label_view:
    type: legacy_type.builtin:attribute
    value:
      object: label.module
      attr_name: label_view
  label_view.k:
    type: label_view_k
    value: {}
  label_view.system-fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: label_view
      ctx_params: []
      service_params: []
  label_view.view-factory-template:
    type: legacy_type.view_factory:template
    value:
      k: label_view.k
      model_t: null
      ui_t_t: null
      view_t: legacy_type.label:view
      is_wrapper: false
      view_ctx_params:
      - piece
      - ctx
      system_fn: label_view.system-fn
  label_view_k:
    type: legacy_type.builtin:record_mt
    value:
      module_name: label
      name: label_view_k
      base: null
      fields: {}
  set_label_text:
    type: legacy_type.builtin:attribute
    value:
      object: label.module
      attr_name: set_label_text
  set_label_text.commit-d:
    type: set_label_text_d
    value: {}
  set_label_text.commit-fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: set_label_text
      ctx_params:
      - piece
      - text
      - hook
      - ctx
      service_params:
      - view_reg
  set_label_text.open-d:
    type: legacy_type.command:open_args_picker_command_d
    value:
      commit_command_d: set_label_text.commit-d
  set_label_text.ui-command-enumerator:
    type: legacy_type.command:ui_args_picker_command_enumerator
    value:
      name: set_label_text
      is_global: false
      required_args:
        text: legacy_type.builtin:string
      args_picker_command_d: set_label_text.open-d
      commit_command_d: set_label_text.commit-d
      commit_fn: set_label_text.commit-fn
  set_label_text_d:
    type: legacy_type.builtin:record_mt
    value:
      module_name: label
      name: set_label_text_d
      base: null
      fields: {}
