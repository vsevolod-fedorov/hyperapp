# Automatically generated file. Do not edit.

import:
- base.mark:mark.module
- builtins:mosaic.service
- builtins:web.service
- common.list_diff:list_diff.module
- legacy_type.box_layout:element
- legacy_type.box_layout:state
- legacy_type.box_layout:view
- legacy_type.builtin:attribute
- legacy_type.builtin:python_module
- legacy_type.builtin:record_mt
- legacy_type.cfg_item:typed_fn_cfg_item
- legacy_type.command:args_picker_command_fn
- legacy_type.command:cfg_item
- legacy_type.command:ui_command
- legacy_type.system_fn:ctx_fn
- legacy_type.view_factory:factory
- legacy_type.view_factory:template
- ui.view.view:view.module
definitions:
  BoxLayoutView:
    type: legacy_type.builtin:attribute
    value:
      object: box_layout.module
      attr_name: BoxLayoutView
  BoxLayoutView.from_piece:
    type: legacy_type.builtin:attribute
    value:
      object: BoxLayoutView
      attr_name: from_piece
  BoxLayoutView_from_piece.system-fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: BoxLayoutView.from_piece
      ctx_params:
      - piece
      - ctx
      service_params:
      - view_reg
  add_child_element:
    type: legacy_type.builtin:attribute
    value:
      object: box_layout.module
      attr_name: add_child_element
  add_child_element.commit-d:
    type: add_child_element_d
    value: {}
  add_child_element.commit-fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: add_child_element
      ctx_params:
      - view
      - widget
      - view_factory
      - ctx
      service_params:
      - view_reg
      - view_factory_reg
  add_child_element.open-d:
    type: open_add_child_element_d
    value: {}
  add_child_element.open-fn:
    type: legacy_type.command:args_picker_command_fn
    value:
      name: add_child_element
      args:
        view_factory: legacy_type.view_factory:factory
      commit_command_d: add_child_element.commit-d
      commit_fn: add_child_element.commit-fn
  add_child_element.ui-command:
    type: legacy_type.command:ui_command
    value:
      d: add_child_element.open-d
      properties:
        is_global: false
        uses_state: false
        remotable: false
      system_fn: add_child_element.open-fn
  add_child_element_d:
    type: legacy_type.builtin:record_mt
    value:
      module_name: box_layout
      name: add_child_element_d
      base: null
      fields: {}
  box_layout-view-add_child_element.command-cfg-item:
    type: legacy_type.command:cfg_item
    value:
      t: legacy_type.box_layout:view
      command: add_child_element.ui-command
  box_layout-view-unwrap.command-cfg-item:
    type: legacy_type.command:cfg_item
    value:
      t: legacy_type.box_layout:view
      command: unwrap.ui-command
  box_layout-view.view-template:
    type: legacy_type.cfg_item:typed_fn_cfg_item
    value:
      t: legacy_type.box_layout:view
      system_fn: BoxLayoutView_from_piece.system-fn
  box_layout.module:
    type: legacy_type.builtin:python_module
    value:
      module_name: box_layout
      file_name: box_layout.dyn.py
      import_list:
        code.list_diff: common.list_diff:list_diff.module
        code.mark: base.mark:mark.module
        code.view: ui.view.view:view.module
        htypes.box_layout.element: legacy_type.box_layout:element
        htypes.box_layout.state: legacy_type.box_layout:state
        htypes.box_layout.view: legacy_type.box_layout:view
        services.mosaic: builtins:mosaic.service
        services.web: builtins:web.service
  open_add_child_element_d:
    type: legacy_type.builtin:record_mt
    value:
      module_name: box_layout
      name: open_add_child_element_d
      base: null
      fields: {}
  unwrap:
    type: legacy_type.builtin:attribute
    value:
      object: box_layout.module
      attr_name: unwrap
  unwrap.d:
    type: unwrap_d
    value: {}
  unwrap.fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: unwrap
      ctx_params:
      - view
      - state
      - hook
      - ctx
      service_params: []
  unwrap.ui-command:
    type: legacy_type.command:ui_command
    value:
      d: unwrap.d
      properties:
        is_global: false
        uses_state: true
        remotable: false
      system_fn: unwrap.fn
  unwrap_d:
    type: legacy_type.builtin:record_mt
    value:
      module_name: box_layout
      name: unwrap_d
      base: null
      fields: {}
  wrap_box_layout:
    type: legacy_type.builtin:attribute
    value:
      object: box_layout.module
      attr_name: wrap_box_layout
  wrap_box_layout.k:
    type: wrap_box_layout_k
    value: {}
  wrap_box_layout.system-fn:
    type: legacy_type.system_fn:ctx_fn
    value:
      function: wrap_box_layout
      ctx_params:
      - inner
      service_params: []
  wrap_box_layout.view-factory-template:
    type: legacy_type.view_factory:template
    value:
      k: wrap_box_layout.k
      view_t: legacy_type.box_layout:view
      is_wrapper: true
      view_ctx_params:
      - piece
      - ctx
      system_fn: wrap_box_layout.system-fn
  wrap_box_layout_k:
    type: legacy_type.builtin:record_mt
    value:
      module_name: box_layout
      name: wrap_box_layout_k
      base: null
      fields: {}
